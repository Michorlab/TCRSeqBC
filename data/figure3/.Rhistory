geom_line(aes(group = Patient)) +
scale_y_continuous(limits = function(y) c(0,max(y))) +
theme_pubr(legend=c("right"))+
facet_wrap(.~diversity, scales = "free", ncol = 5) +
stat_compare_means(method= "t.test",paired = TRUE)+
geom_point(color="#009E73",size = 1.5) +
ylab("TCR-b diversity score")
q=plot_grid(x, y,ncol = 1, align = "v")
ggsave("Pair5.pdf", width = 10, height=6)
y=ggplot(beta_long, aes(x = Timepoint, y = value), backgroundColor="white", mainTitle="Alpha_Chao1 diversity comparisons") +
#geom_boxplot(alpha = .5) +
geom_line(aes(group = Patient)) +
scale_y_continuous(limits = function(y) c(0,max(y))) +
theme_pubr(legend=c("right"))+
facet_wrap(.~diversity, scales = "free", ncol = 5) +
stat_compare_means(method= "t.test",paired = TRUE)+
geom_point(color="#009E73",size = 1.5) +
ylab("TCR-b diversity score")
ggsave("Pair_beta5.pdf", width = 10, height=3)
library(tidyverse)
library(dplyr)
library(tidyr)
library(readxl)
library(here)
library(ggplot2)
library(ggpubr)
library(fossil)
library(vegan)
library(RColorBrewer)
library(cowplot)
library(ggh4x)
library(rstatix)
setwd("/Users/junnishida/Dropbox (Partners HealthCare)/Ageing_and_Immunity/gali_simona/sudheshna/data/tcrseq/figure1/")
#read data
df<- read_csv("Alpha_diverisity_485.csv")
#####Basic statistics#######
df1=as.data.frame(df)
nrow(df1)
DCIS=df1[df1$Stage == 0,]
Stage4=df1[df1$Stage == 4,]
DCIS_young=df1[df1$Stage == 0 & df1$Age_bin == "young",]
DCIS_aged=df1[df1$Stage == 0 & df1$Age_bin == "old",]
Stage4_young=df1[df1$Stage == 4 & df1$Age_bin == "young",]
Stage4_aged=df1[df1$Stage == 4 & df1$Age_bin == "old",]
nrow(Stage4)
mean(df1$Age)
sd(df1$Age)
nrow(df1)
nrow(df1[df1$Timepoint=="Baseline",])
nrow(df1[df1$Timepoint=="One_year",])
df_1y=df1[df1$Timepoint=="One_year",]
df_1y$Age_bin
nrow(df_1y[df_1y$Age_bin=="young",])
df1$Timepoint
##############
#Concatenate subtype information -> TNBC vs ER+/Her2+
df$Subtype  %>% table()
df[df$Subtype  %in% "TNBC","Subtype_new"]<- "TNBC"
df[df$Subtype  %in%  c("ER+ only", "ER+/Her2+", "Her2+ only"), "Subtype_new"]<- "ER+/Her2"
df$Subtype_new  %>% table()
#####Hill index (+ Zipf a index) mapping#####
#Using long format for plotting
df
#####Hill index (+ Zipf a index) mapping#####
#Using long format for plotting
df$Simpson_clonality=sqrt(1-df$Gini_Simpson)
df
df_long<- df  %>% pivot_longer(c(c(Chao1:D4,param.alpha),Gini_Simpson), names_to = "diversity")
#write_tsv(df_long, "Alpha_diverisity_baseline_long.tsv")
df_long
df_long$Stage<- df_long$Stage  %>% as.factor()
df_long<- df  %>% pivot_longer(c(c(Chao1:D4,param.alpha),Simpson_clonality), names_to = "diversity")
#write_tsv(df_long, "Alpha_diverisity_baseline_long.tsv")
df_long
df_long$Stage<- df_long$Stage  %>% as.factor()
df_long3=df_long[df_long$diversity== "Chao1"|df_long$diversity=="Clonality"|df_long$diversity=="Richness"|df_long$diversity=="Shannon"|df_long$diversity=="Simpson_clonality",]
df_long3$diversity=factor(df_long3$diversity,levels=c("Richness","Chao1","Shannon","Clonality","Simpson_clonality"))
df_long3 %>%
ggplot(aes(x = Stage, y = value)) +
geom_boxplot(outlier.shape = NA, color = "Black", ) +
labs(y = "TCR Alpha Chain Diversity") +
geom_jitter(aes(fill= Stage, color= Stage),size = 0.7, width = 0.25, alpha = 0.6) +
scale_fill_manual(values = c('#009E73', '#E69F00')) +
scale_color_manual(values = c('#009E73', '#E69F00')) +
facet_wrap( ~ diversity, scales = "free", ncol=5) +
stat_compare_means(label = "p.format",method="wilcox.test", vjust = 0, hjust = 0,size=3, bracket.size = 0.3) +
theme_pubr() +
theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(), text = element_text(size = 10), legend.position="right")
df_long3=df_long[df_long$diversity== "Chao1"|df_long$diversity=="Clonality"|df_long$diversity=="Richness"|df_long$diversity=="Shannon"|df_long$diversity=="Simpson_clonality",]
df_long3$diversity=factor(df_long3$diversity,levels=c("Richness","Chao1","Shannon","Clonality","Simpson_clonality"))
df_long3 %>%
ggplot(aes(x = Age, y = value, color=as.factor(Stage))) +
geom_point(size=0.7, alpha = 0.6) +
labs(y = "TCR Alpha Chain Diversity") +
scale_color_manual(values = c('#009E73', '#E69F00')) +
scale_y_continuous(limits = function(y) c(0,max(y))) +
facet_grid2(Stage ~ diversity, scales = "free", independent = "y") +
theme(text = element_text(size = 10), legend.position="right")+geom_smooth(color="black",method=lm, size=0.5)+ stat_cor(color="black",method = "pearson", digits = 3)+
theme_pubr()+ theme(legend.position = "none")
ggsave("Scatter5_clonality.pdf", width = 12, height=5)
aa=df %>%
ggplot(aes(x = Age, y = Simpson_clonality, color=as.factor(Stage))) +
geom_point(size=0.7, alpha = 0.6) +
labs(y = "TCR Alpha Chain Diversity") +
scale_color_manual(values = c('#009E73', '#E69F00')) +
scale_y_continuous(limits = function(y) c(0,max(y))) +
facet_wrap(. ~ Stage) +
theme(text = element_text(size = 10), legend.position="right")+geom_smooth(color="black",method=lm, size=0.5)+ stat_cor(color="black",method = "pearson", digits = 3)+
theme_pubr()+ theme(legend.position = "none")
df_long3 %>%
mutate(Age_bin = factor(df_long3$Age_bin, levels = c("young", "old")))  %>%
mutate(Recurrence_bin = factor(df_long3$Recurrence_bin, levels = c("yes", "no")))  %>%
filter(!is.na(Recurrence_bin))  %>%
filter(Stage == 0)  %>%
ggplot(aes(x = Recurrence_bin, y = value)) +
geom_boxplot(outlier.shape = NA, color = "Black", ) +
labs(y = "TCR Alpha Chain Diversity") +
geom_jitter(aes(fill= Recurrence_bin, color= Recurrence_bin),size = 0.7, width = 0.25, alpha = 0.6) +
scale_fill_manual(values = c('#c51b7d', '#4575b4')) +
scale_color_manual(values = c('#c51b7d', '#4575b4')) +
facet_wrap(vars(Age_bin,diversity), scales = "free", ncol = 5) +
scale_y_continuous(limits = function(y) c(0,max(y))) +
stat_compare_means(method="wilcox.test", label = "p.format",
vjust = 0.5,  hjust = 0,size=3, bracket.size = 0.3) +
theme_pubr() +
theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(),
text = element_text(size = 10), legend.position="right")
ggsave("Figure1_AlphaChain_hill_index_by_Recurrencebin_within_Agebin_5_clonality.pdf", width = 10, height=4.5)
stat.test <- aov(Simpson_clonality ~ Age_stage, data = df) %>%
tukey_hsd()%>%
add_y_position(formula= Simpson_clonality ~ Age_stage, data = df,step.increase = 0.5)
##df2=df[df$Age <= 40|df$Age >= 50,]
##df2
##df$Age_bin_48 <- ifelse(df$Age <= 48, "young","old")
df$Age_stage=paste(df$Age_bin,df$Stage)
df
stat.test <- aov(Simpson_clonality ~ Age_stage, data = df) %>%
tukey_hsd()%>%
add_y_position(formula= Simpson_clonality ~ Age_stage, data = df,step.increase = 0.5)
##########
df %>%mutate(Age_stage = factor(df$Age_stage, levels = c("young 0","young 4", "old 0","old 4")))  %>%
ggplot(aes(x = Age_stage, y = Simpson_clonality, color=as.factor(Stage))) +
geom_boxplot(outlier.shape = NA, color = "Black", ) +
#geom_text(aes(label=sprintf("%0.2f", `Pr(>|z|)`))
labs(y = "TCR Alpha Chain Diversity") +
geom_jitter(aes(fill= as.factor(Stage), color= as.factor(Stage)),size = 0.7, width = 0.25, alpha = 0.6) +
scale_fill_manual(values = c('#009E73', '#E69F00')) +
scale_color_manual(values = c('#009E73', '#E69F00')) +
#stat_compare_means(method="wilcox.test", label = "p.format", vjust = 0.5,  hjust = 0, bracket.size = 0.3) +
scale_y_continuous(limits = function(y) c(0,max(y))) +
stat_pvalue_manual(stat.test,label = "p = {p.adj}")+
#stat_compare_means(aes(label = ifelse(p < 1.e-2,
#sprintf("p = %2.1e", as.numeric(..p.format..)),
#sprintf("p = %5.4f", as.numeric(..p.format..)))))+
theme_pubr() +
theme(axis.ticks.x=element_blank(), legend.position="right")+ theme(legend.position = "none")
ggsave("Simpson_clonality_Age_Stage_alpha.pdf", width = 5, height=5)
stat.test <- aov(Simpson_clonality ~ Age_stage, data = df) %>%
tukey_hsd()%>%
add_y_position(formula= Simpson_clonality ~ Age_stage, data = df,step.increase = 0.1)
##########
df %>%mutate(Age_stage = factor(df$Age_stage, levels = c("young 0","young 4", "old 0","old 4")))  %>%
ggplot(aes(x = Age_stage, y = Simpson_clonality, color=as.factor(Stage))) +
geom_boxplot(outlier.shape = NA, color = "Black", ) +
#geom_text(aes(label=sprintf("%0.2f", `Pr(>|z|)`))
labs(y = "TCR Alpha Chain Diversity") +
geom_jitter(aes(fill= as.factor(Stage), color= as.factor(Stage)),size = 0.7, width = 0.25, alpha = 0.6) +
scale_fill_manual(values = c('#009E73', '#E69F00')) +
scale_color_manual(values = c('#009E73', '#E69F00')) +
#stat_compare_means(method="wilcox.test", label = "p.format", vjust = 0.5,  hjust = 0, bracket.size = 0.3) +
scale_y_continuous(limits = function(y) c(0,max(y))) +
stat_pvalue_manual(stat.test,label = "p = {p.adj}")+
#stat_compare_means(aes(label = ifelse(p < 1.e-2,
#sprintf("p = %2.1e", as.numeric(..p.format..)),
#sprintf("p = %5.4f", as.numeric(..p.format..)))))+
theme_pubr() +
theme(axis.ticks.x=element_blank(), legend.position="right")+ theme(legend.position = "none")
ggsave("Simpson_clonality_Age_Stage_alpha.pdf", width = 5, height=5)
write.csv(df,"All_plus_Simpson_clonality_alpha.csv")
setwd("/Users/junnishida/Dropbox (Partners HealthCare)/Ageing_and_Immunity/gali_simona/sudheshna/data/tcrseq/figure1/")
#read data
df<- read_csv("Beta_diverisity_485.csv")
#Concatenate subtype information -> TNBC vs ER+/Her2+
df$Subtype  %>% table()
df[df$Subtype  %in% "TNBC","Subtype_new"]<- "TNBC"
df[df$Subtype  %in%  c("ER+ only", "ER+/Her2+", "Her2+ only"), "Subtype_new"]<- "ER+/Her2"
df$Subtype_new  %>% table()
#Using long format for plotting
df$Simpson_clonality=sqrt(1-df$Gini_Simpson)
write.csv(df,"All_plus_Simpson_clonality_beta.csv")
df_long<- df  %>% pivot_longer(c(c(Chao1:D4,param.alpha),Simpson_clonality), names_to = "diversity")
#write_tsv(df_long, "Alpha_diverisity_baseline_long.tsv")
df_long
df_long$Stage<- df_long$Stage  %>% as.factor()
df_long3=df_long[df_long$diversity== "Chao1"|df_long$diversity=="Clonality"|df_long$diversity=="Richness"|df_long$diversity=="Shannon"|df_long$diversity=="Simpson_clonality",]
df_long3$diversity=factor(df_long3$diversity,levels=c("Richness","Chao1","Shannon","Clonality","Simpson_clonality"))
df_long3 %>%
mutate(Age_bin = factor(df_long3$Age_bin, levels = c("young", "old")))  %>%
mutate(Recurrence_bin = factor(df_long3$Recurrence_bin, levels = c("yes", "no")))  %>%
filter(!is.na(Recurrence_bin))  %>%
filter(Stage == 0)  %>%
ggplot(aes(x = Recurrence_bin, y = value)) +
geom_boxplot(outlier.shape = NA, color = "Black", ) +
labs(y = "TCR Beta Chain Diversity") +
geom_jitter(aes(fill= Recurrence_bin, color= Recurrence_bin),size = 0.7, width = 0.25, alpha = 0.6) +
scale_fill_manual(values = c('#c51b7d', '#4575b4')) +
scale_color_manual(values = c('#c51b7d', '#4575b4')) +
facet_wrap(vars(Age_bin,diversity), scales = "free", ncol = 5) +
scale_y_continuous(limits = function(y) c(0,max(y))) +
stat_compare_means(method="wilcox.test", label = "p.format",
vjust = 0.5,  hjust = 0,size=3, bracket.size = 0.3) +
theme_pubr() +
theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(),
text = element_text(size = 10), legend.position="right")
ggsave("Figure1_BetaChain_hill_index_by_Recurrencebin_within_Agebin_5_Clonality.pdf", width = 10, height=4.5)
##df2=df[df$Age <= 40|df$Age >= 50,]
##df2
##df$Age_bin_48 <- ifelse(df$Age <= 48, "young","old")
df$Age_stage=paste(df$Age_bin,df$Stage)
stat.test <- aov(Simpson_clonality ~ Age_stage, data = df) %>%
tukey_hsd()%>%
add_y_position(formula= Simpson_clonality ~ Age_stage, data = df,step.increase = 0.1)
df %>%mutate(Age_stage = factor(df$Age_stage, levels = c("young 0","young 4", "old 0","old 4")))  %>%
ggplot(aes(x = Age_stage, y = Simpson_clonality, color=as.factor(Stage))) +
geom_boxplot(outlier.shape = NA, color = "Black", ) +
#geom_text(aes(label=sprintf("%0.2f", `Pr(>|z|)`))
labs(y = "TCR Beta Chain Diversity") +
geom_jitter(aes(fill= as.factor(Stage), color= as.factor(Stage)),size = 0.7, width = 0.25, alpha = 0.6) +
scale_fill_manual(values = c('#009E73', '#E69F00')) +
scale_color_manual(values = c('#009E73', '#E69F00')) +
#stat_compare_means(method="wilcox.test", label = "p.format", vjust = 0.5,  hjust = 0, bracket.size = 0.3) +
scale_y_continuous(limits = function(y) c(0,max(y))) +
stat_pvalue_manual(stat.test,label = "p = {p.adj}")+
#stat_compare_means(aes(label = ifelse(p < 1.e-2,
#sprintf("p = %2.1e", as.numeric(..p.format..)),
#sprintf("p = %5.4f", as.numeric(..p.format..)))))+
theme_pubr() +
theme(axis.ticks.x=element_blank(), legend.position="right")+ theme(legend.position = "none")
ggsave("Simpson_clonality_Age_Stage_Beta.pdf", width = 5, height=5)
alpha <- read.csv(file = "baseline_oneyear_alpha.csv")
beta <- read.csv(file = "baseline_oneyear_beta.csv")
alpha
write.csv(alpha,"Baseline_Oneyear_plus_Simpson_clonality_alpha.csv")
alpha$Simpson_clonality=sqrt(1-alpha$Gini_Simpson)
write.csv(alpha,"Baseline_Oneyear_plus_Simpson_clonality_alpha.csv")
beta$Simpson_clonality=sqrt(1-beta$Gini_Simpson)
write.csv(beta,"Baseline_Oneyear_plus_Simpson_clonality_beta.csv")
alpha=alpha[order(alpha$Patient, decreasing = FALSE),]
alpha1 = select(alpha, Patient, Richness, Chao1, Shannon, Clonality,Simpson_clonality,Timepoint)
alpha_long<- alpha1  %>% pivot_longer(Richness:Simpson_clonality, names_to = "diversity")
alpha_long$diversity=factor(alpha_long$diversity, levels=c("Richness","Chao1","Shannon","Clonality","Simpson_clonality"))
ggplot(alpha_long, aes(x = Timepoint, y = value), backgroundColor="white", mainTitle="Alpha_Chao1 diversity comparisons") +
#geom_boxplot(alpha = .5) +
geom_line(aes(group = Patient)) +
scale_y_continuous(limits = function(y) c(0,max(y))) +
theme_pubr(legend=c("right"))+
facet_wrap(.~diversity, scales = "free", ncol = 5) +
stat_compare_means(method= "t.test",paired = TRUE)+
geom_point(color="#009E73",size = 1.5) +
ylab("TCR-a diversity score")
ggsave("Pair_alpha5_Clonality.pdf", width = 10, height=3)
beta=beta[order(beta$Patient, decreasing = FALSE),]
beta1 = select(beta, Patient, Richness, Chao1, Shannon, Clonality,Simpson_clonality,Timepoint)
beta_long<- beta1  %>% pivot_longer(Richness:Simpson_clonality, names_to = "diversity")
beta_long$diversity=factor(beta_long$diversity, levels=c("Richness","Chao1","Shannon","Clonality","Simpson_clonality"))
y=ggplot(beta_long, aes(x = Timepoint, y = value), backgroundColor="white", mainTitle="Alpha_Chao1 diversity comparisons") +
#geom_boxplot(alpha = .5) +
geom_line(aes(group = Patient)) +
scale_y_continuous(limits = function(y) c(0,max(y))) +
theme_pubr(legend=c("right"))+
facet_wrap(.~diversity, scales = "free", ncol = 5) +
stat_compare_means(method= "t.test",paired = TRUE)+
geom_point(color="#009E73",size = 1.5) +
ylab("TCR-b diversity score")
ggsave("Pair_beta5_Clonality.pdf", width = 10, height=3)
q=plot_grid(x, y,ncol = 1, align = "v")
ggsave("Pair5_Clonality.pdf", width = 10, height=6)
x=ggplot(alpha_long, aes(x = Timepoint, y = value), backgroundColor="white", mainTitle="Alpha_Chao1 diversity comparisons") +
#geom_boxplot(alpha = .5) +
geom_line(aes(group = Patient)) +
scale_y_continuous(limits = function(y) c(0,max(y))) +
theme_pubr(legend=c("right"))+
facet_wrap(.~diversity, scales = "free", ncol = 5) +
stat_compare_means(method= "t.test",paired = TRUE)+
geom_point(color="#009E73",size = 1.5) +
ylab("TCR-a diversity score")
ggsave("Pair_alpha5_Clonality.pdf", width = 10, height=3)
beta=beta[order(beta$Patient, decreasing = FALSE),]
beta1 = select(beta, Patient, Richness, Chao1, Shannon, Clonality,Simpson_clonality,Timepoint)
beta_long<- beta1  %>% pivot_longer(Richness:Simpson_clonality, names_to = "diversity")
beta_long$diversity=factor(beta_long$diversity, levels=c("Richness","Chao1","Shannon","Clonality","Simpson_clonality"))
y=ggplot(beta_long, aes(x = Timepoint, y = value), backgroundColor="white", mainTitle="Alpha_Chao1 diversity comparisons") +
#geom_boxplot(alpha = .5) +
geom_line(aes(group = Patient)) +
scale_y_continuous(limits = function(y) c(0,max(y))) +
theme_pubr(legend=c("right"))+
facet_wrap(.~diversity, scales = "free", ncol = 5) +
stat_compare_means(method= "t.test",paired = TRUE)+
geom_point(color="#009E73",size = 1.5) +
ylab("TCR-b diversity score")
ggsave("Pair_beta5_Clonality.pdf", width = 10, height=3)
q=plot_grid(x, y,ncol = 1, align = "v")
ggsave("Pair5_Clonality.pdf", width = 10, height=6)
library(tidyverse)
library(dplyr)
library(tidyr)
library(readxl)
library(here)
library(ggplot2)
library(ggpubr)
library(fossil)
library(vegan)
library(RColorBrewer)
library(cowplot)
library(ggh4x)
library(rstatix)
setwd("/Users/junnishida/Dropbox (Partners HealthCare)/Ageing_and_Immunity/gali_simona/sudheshna/data/tcrseq/figure1/")
#read data
df<- read_csv("Beta_diverisity_485.csv")
#Concatenate subtype information -> TNBC vs ER+/Her2+
df$Subtype  %>% table()
df[df$Subtype  %in% "TNBC","Subtype_new"]<- "TNBC"
df[df$Subtype  %in%  c("ER+ only", "ER+/Her2+", "Her2+ only"), "Subtype_new"]<- "ER+/Her2"
df$Subtype_new  %>% table()
#Using long format for plotting
df$Simpson_clonality=sqrt(1-df$Gini_Simpson)
write.csv(df,"All_plus_Simpson_clonality_beta.csv")
df_long<- df  %>% pivot_longer(c(c(Chao1:D4,param.alpha),Simpson_clonality), names_to = "diversity")
#write_tsv(df_long, "Alpha_diverisity_baseline_long.tsv")
df_long
df_long$Stage<- df_long$Stage  %>% as.factor()
df_long2=df_long[df_long$diversity== "Chao1"|df_long$diversity=="Clonality"|df_long$diversity=="Richness"|df_long$diversity=="Shannon"|df_long$diversity=="param.alpha",]
df_long2$diversity=factor(df_long2$diversity,levels=c("Richness","Chao1","Shannon","Clonality","param.alpha"))
df_long3=df_long[df_long$diversity== "Chao1"|df_long$diversity=="Clonality"|df_long$diversity=="Richness"|df_long$diversity=="Shannon"|df_long$diversity=="Simpson_clonality",]
df_long3$diversity=factor(df_long3$diversity,levels=c("Richness","Chao1","Shannon","Clonality","Simpson_clonality"))
df_long3 %>%
ggplot(aes(x = Age, y = value, color=as.factor(Stage))) +
geom_point(size=0.7, alpha = 0.6) +
labs(y = "TCR Beta Chain Diversity") +
scale_color_manual(values = c('#009E73', '#E69F00')) +
scale_y_continuous(limits = function(y) c(0,max(y))) +
facet_grid2(Stage ~ diversity, scales = "free", independent = "y") +
theme(text = element_text(size = 10), legend.position="right")+geom_smooth(color="black",method=lm, size=0.5)+ stat_cor(color="black",method = "pearson", digits = 3)+
theme_pubr()+ theme(legend.position = "none")
ggsave("Scatter_beta_clonality5.pdf", width = 12, height=5)
library(ggpubr)
library(edgeR)
library(DESeq2)
library(ComplexHeatmap)
library(VennDiagram)
library(GSVA)
library(tidyverse)
library(survival)
library(survminer)
library(fgsea)
library(dplyr)
library(tidylog)
library(magrittr)
library(EnhancedVolcano)
library(AnnotationDbi)
library(org.Hs.eg.db)
library(data.table)
library(msigdbr)
library(enrichplot)
library(ggrepel)
library(rstatix)
library(ggplot2)
library(viridis)
library(hrbrthemes)
library(cowplot)
library(wesanderson)
setwd("/Users/junnishida/Dropbox (Partners HealthCare)/Ageing_and_Immunity/gali_simona/sudheshna/data/Fig3/")
################
alpha_sample_anno<- read.table(file = "sample_anno_AlphaChain.tsv", header = TRUE, row.names = 1, sep = "\t")
tpm<- read.csv("_TPM.csv", header = TRUE, row.names = 1)
log2tpm<- log2(t(tpm) + 1)
tmp = prcomp(log2tpm)
df_pca = as.data.frame(tmp$x[,1:2], stringsAsFactors = FALSE)
table(rownames(alpha_sample_anno) == rownames(df_pca))
df_pca_anno<- cbind(df_pca, alpha_sample_anno)
df_pca_anno$Age_bin=factor(df_pca_anno$Age_bin, levels = c("young","old"))
nrow(alpha_sample_anno)
alpha_sample_anno$Age_stage= paste(alpha_sample_anno$Stage,alpha_sample_anno$Age_bin)
nrow(alpha_sample_anno[alpha_sample_anno$Age_stage=="4 young",])
#########Heatmap of top 500 variable genes###########
log2tpm_t=t(log2tpm)
log2tpm_t=as.matrix(log2tpm_t)
sd=apply(log2tpm_t, 1, sd)
sd=as.data.frame(sd)
colnames(sd)[1]="SD"
log2tpm_t_SD=merge(log2tpm_t,sd, by=0)
rownames(log2tpm_t_SD)=log2tpm_t_SD$Row.names
log2tpm_t_SD <- log2tpm_t_SD[-which(colnames(log2tpm_t_SD) == "Row.names")]
log2tpm_t_SD1 <- log2tpm_t_SD[order(log2tpm_t_SD[,"SD"], decreasing = TRUE),]
nrow(log2tpm_t_SD1)*0.1
log2tpm_t_SD2=log2tpm_t_SD1[1:500,] #Top 10% 1837
log2tpm_t_SD3 <- log2tpm_t_SD2[-which(colnames(log2tpm_t_SD2) == "SD")]
log2tpm_t_SD4=as.matrix(log2tpm_t_SD3)
HM_mat_z=t(scale(t(log2tpm_t_SD4)))
as.data.frame(HM_mat_z)
alpha_sample_anno
alpha_sample_anno$Age_bin=factor(alpha_sample_anno$Age_bin,levels=c("young","old"))
alpha_sample_anno$Stage=factor(alpha_sample_anno$Stage,levels=c("0","4"))
alpha_sample_anno$Chao1_bin=factor(alpha_sample_anno$Chao1_bin,levels=c("high","low"))
colours <- list('Age_bin' = c("young" = "#D23F89","old"="#7571AF"),'Stage' = c("0" = "#009E73","4"="#E69F00"),
'Chao1_bin' = c("high" = "#D55E00","low"="#0072B2")
)
ha = HeatmapAnnotation(
Chao1 = anno_barplot(alpha_sample_anno$Chao1, width = unit(4, "cm")),
Age_bin=alpha_sample_anno$Age_bin,
Stage=alpha_sample_anno$Stage,
Chao1_bin = alpha_sample_anno$Chao1_bin,
col=colours,
simple_anno_size = unit(0.2, "cm"),
annotation_width = unit(c(1,2), 'mm'),
annotation_name_gp= gpar(fontsize = 7)
)
hmap=Heatmap(
HM_mat_z,
#name = "log2(Percent)",
name = "Z-score",
#col = col_fun,
#row_km = 2,
show_row_names = F,
show_column_names = F,
cluster_rows = T,
cluster_columns = TRUE,
show_column_dend = TRUE,
show_row_dend = T,
row_dend_reorder = TRUE,
column_dend_reorder = TRUE,
clustering_method_rows = "ward.D2",
clustering_method_columns = "ward.D2",
#ward.D2, average
width = unit(90, "mm"),
top_annotation=ha,
column_names_gp = gpar(fontsize = 8),
row_names_gp = gpar(fontsize = 8)
)
#########Stat test of PC1 and PC2 ###############
df_pca_anno$Chao1_bin=factor(df_pca_anno$Chao1_bin,levels=c("high","low"))
df_pca_anno$Age_bin=factor(df_pca_anno$Age_bin,levels=c("young","old"))
df_pca_anno$CPC_Stage=factor(df_pca_anno$CPC_Stage,levels=c("0","4"))
#######Clustering analysis#################################
library(cluster)
library(factoextra)
library(NbClust)
#PCA1 and PCA2
df_pca_anno_k=df_pca_anno[1:2]
library(ggdendro)
clusters <- hclust(dist(df_pca_anno_k))
ggdendrogram(clusters)
clusterCut <- cutree(clusters, 6)
df_pca_anno$cluster <- as.character(clusterCut)
df_pca_anno$cluster <- factor(df_pca_anno$cluster, levels = c("3", "6","4","1", "2","5"))
##############
myAHCnum = NbClust(df_pca_anno_k, method = "ward.D", index = "all")
df_pca_anno  %>%
ggplot(aes(x = PC1 , y = PC2, col = cluster)) +
geom_point(size= 1) +
theme_bw() +
theme(legend.position = "right",
legend.background = element_rect(linetype="solid", colour = "black"),
axis.text = element_text(colour="gray10")) +
scale_y_continuous(limits=c(-100, 40))+
scale_x_continuous(limits=c(-180, 100))+
scale_color_discrete(name = "Cluster", breaks=c("3", "6","4","1", "2","5"), labels = c("1", "2", "3","4","5","6"))+
facet_grid(Stage ~ Age_bin, scale= "free_y")
#########Cluster analysis (Fig 3C)######
clusters <- hclust(dist(df_pca_anno_k))
ggdendrogram(clusters)
clusterCut <- cutree(clusters, 6)
df_pca_anno$cluster <- as.character(clusterCut)
df_pca_anno$Freq <- 1
df_pca_anno$Freq
df_pca_anno$cluster <- factor(df_pca_anno$cluster, levels = c("3", "6","4","1", "2","5"))
####Stat test Chao1 or Shannon or Clonality
stat.test <- aov(Richness ~ cluster, data = df_pca_anno)
summary(stat.test)
ggplot(df_pca_anno, aes(x=cluster, y=Richness, col = cluster)) +
geom_boxplot(outlier.shape = NA)+
geom_jitter(position = position_jitter(0.1), size = 0.5)+
ylab("Richness")+
scale_x_discrete(name = "Cluster", breaks=c("3", "6","4","1", "2","5"), labels = c("1", "2", "3","4","5","6"))+
scale_color_discrete(name = "Cluster", breaks=c("3", "6","4","1", "2","5"), labels = c("1", "2", "3","4","5","6"))+
theme_pubr(legend=c("right"))
df_pca_anno
df_pca_anno$Simpson_clonality=sqrt(1-df_pca_anno$Gini_Simpson)
ggplot(df_pca_anno, aes(x=cluster, y=Simpson_clonality, col = cluster)) +
geom_boxplot(outlier.shape = NA)+
geom_jitter(position = position_jitter(0.1), size = 0.5)+
ylab("Simpson_clonality")+
scale_x_discrete(name = "Cluster", breaks=c("3", "6","4","1", "2","5"), labels = c("1", "2", "3","4","5","6"))+
scale_color_discrete(name = "Cluster", breaks=c("3", "6","4","1", "2","5"), labels = c("1", "2", "3","4","5","6"))+
theme_pubr(legend=c("right"))
ggsave("A_Cluster_Simpson_clonality.pdf", width = 5, height = 4)
o
o
####Stat test Chao1 or Shannon or Clonality
stat.test <- aov(Simpson_clonality ~ cluster, data = df_pca_anno)
summary(stat.test)
####Stat test Chao1 or Shannon or Clonality
stat.test <- aov(RIchness ~ cluster, data = df_pca_anno)
####Stat test Chao1 or Shannon or Clonality
stat.test <- aov(Richness ~ cluster, data = df_pca_anno)
summary(stat.test)
####Stat test Chao1 or Shannon or Clonality
stat.test <- aov(Simpson_clonality ~ cluster, data = df_pca_anno)
summary(stat.test)
####Stat test Chao1 or Shannon or Clonality
stat.test <- aov(Clonality ~ cluster, data = df_pca_anno)
summary(stat.test)
